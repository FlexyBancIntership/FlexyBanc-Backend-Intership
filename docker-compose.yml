services:
  # ===================
  # PostgreSQL
  # ===================
  postgres:
    image: postgres:15
    container_name: PostgreSQL
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: flexy_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d flexy_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flexy_network

  # ===================
  # Kratos Migration
  # ===================
  kratos_migrate:
    image: oryd/kratos:v1.1.0
    container_name: kratos_migrate
    environment:
      - DSN=postgres://postgres:admin@PostgreSQL:5432/flexy_db?sslmode=disable
    volumes:
      - ./src/kratos/kratos.yml:/etc/kratos/kratos.yml:ro
      - ./src/kratos/identities/schema.json:/etc/kratos/identities/schema.json:ro
      - ./src/kratos/hooks:/etc/kratos/hooks:ro
    command: migrate sql -e --yes
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"
    networks:
      - flexy_network

  # ===================
  # Ory Kratos
  # ===================
  kratos:
    image: oryd/kratos:v1.1.0
    container_name: kratos
    volumes:
      - ./src/kratos/kratos.yml:/etc/kratos/kratos.yml:ro
      - ./src/kratos/identities/schema.json:/etc/kratos/identities/schema.json:ro
      - ./src/kratos/hooks:/etc/kratos/hooks:ro
    environment:
      - DSN=postgres://postgres:admin@PostgreSQL:5432/flexy_db?sslmode=disable
      - LOG_LEVEL=debug
    ports:
      - "4433:4433"
      - "4434:4434"
    depends_on:
      kratos_migrate:
        condition: service_completed_successfully
    command: serve --dev --config /etc/kratos/kratos.yml
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4433/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - flexy_network

  # ===================
  # Backend (NestJS)
  # ===================
  flexy_backend:
    build: .
    container_name: flexy_backend
    ports:
      - "3000:3000"
    environment:
      DB_HOST: PostgreSQL
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: admin
      DB_NAME: flexy_db
      KRATOS_PUBLIC_URL: http://kratos:4433
      KRATOS_ADMIN_URL: http://kratos:4434
      NODE_ENV: docker
      WEBHOOK_SECRET: your-webhook-secret-here
    depends_on:
      postgres:
        condition: service_healthy
      kratos:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run start:dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/auth/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - flexy_network

  # ===================
  # Kratos UI Node
  # ===================
  kratos_ui:
    image: oryd/kratos-selfservice-ui-node:v1.1.0
    container_name: kratos_ui
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433
      - KRATOS_BROWSER_URL=http://localhost:4433
      - COOKIE_SECRET=supersecretcookie123456789012345678901234567890
      - CSRF_COOKIE_NAME=__Host-ory_kratos_csrf
      - CSRF_COOKIE_SECRET=supersecretcsrf123456789012345678901234567890
      - PORT=3000
    ports:
      - "4455:3000"
    depends_on:
      kratos:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - flexy_network

  # ===================
  # MailSlurper for email testing
  # ===================
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    container_name: mailslurper
    ports:
      - "4436:4436"
      - "4437:4437"
      - "1025:1025"
    networks:
      - flexy_network

volumes:
  postgres_data:

networks:
  flexy_network:
    driver: bridge